{"version":3,"sources":["webpack:///./src/components/layout/header.js","webpack:///./src/components/layout/sidebar.js","webpack:///./src/components/layout/layout.js","webpack:///./src/constants/links.js","webpack:///./src/components/layout/navbar.js","webpack:///./src/components/layout/footer.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Sidebar","isOpen","toggleSidebar","className","onClick","styleClass","Layout","children","React","useState","setIsOpen","data","site","siteMetadata","title","activeStyles","borderRadius","border","tempLinks","id","text","url","map","link","key","activeStyle","Navbar","type","Footer","Date","getFullYear","target","href","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","NotFoundPage"],"mappings":"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","file":"component---src-pages-404-js-cada1da81f29cb13e9fe.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Navbar from \"./navbar\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h2 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h2>\n      <Navbar />\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport Links from \"../../constants/links\"\nimport { FaTimes } from \"react-icons/fa\"\n\nconst Sidebar = ({ isOpen, toggleSidebar }) => {\n  return (\n    <aside className={`sidebar ${isOpen ? \"show-sidebar\" : \"\"} `}>\n      <button className=\"close-btn\" onClick={toggleSidebar}>\n        <FaTimes />\n      </button>\n      <div className=\"side-container\">\n        <Links styleClass={`${isOpen ? \"sidebar-links\" : \"\"}`} />\n      </div>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../../css/layout.css\"\nimport Navbar from \"./navbar\"\nimport Sidebar from \"./sidebar\"\n\nconst Layout = ({ children }) => {\n  // -----------  0616\n  const [isOpen, setIsOpen] = React.useState(false)\n  // test 1\n  // console.log(\"isOpen is \" + isOpen)\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen)\n    // test 2\n    // console.log(\"isOpen is\" + isOpen)\n  }\n  // ------------ END 0616\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Navbar toggleSidebar={toggleSidebar} />\n      <Sidebar isOpen={isOpen} toggleSidebar={toggleSidebar} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"../css/layout.css\"\n\nconst data = [\n  {\n    id: 1,\n    text: \"Home\",\n    url: \"/\",\n  },\n  {\n    id: 2,\n    text: \"Articles\",\n    url: \"/articles\",\n  },\n  {\n    id: 3,\n    text: \"Gallery\",\n    url: \"/images\",\n  },\n]\n\nconst activeStyles = {\n  background: \"white\",\n  color: \"rebeccapurple\",\n  padding: \"0.6rem\",\n  borderRadius: \"5px\",\n  border: \"1px solid ghostwhite\",\n}\n\nconst tempLinks = data.map(link => {\n  return (\n    <li key={link.id}>\n      <Link to={link.url} activeStyle={activeStyles}>\n        {link.text}\n      </Link>\n    </li>\n  )\n})\n\nexport default ({ styleClass }) => {\n  return (\n    <ul className={`page-links ${styleClass ? styleClass : \"\"}`}>\n      {tempLinks}\n    </ul>\n  )\n}\n","import React from \"react\"\nimport PageLinks from \"../../constants/links\"\nimport \"../../css/layout.css\"\n\nimport { FaAlignRight } from \"react-icons/fa\"\n\nconst Navbar = ({ toggleSidebar }) => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-center\">\n        <div className=\"nav-header\">\n          {/* <img src={logo} alt=\"logo\" /> */}\n          <button type=\"button\" className=\"toggle-btn\" onClick={toggleSidebar}>\n            <FaAlignRight></FaAlignRight>\n          </button>\n        </div>\n        <PageLinks styleClass=\"nav-links\"></PageLinks>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <div>\n      <h4 style={{ color: `#858585` }}>\n        Copyright Â© {new Date().getFullYear()} Nabi.io | All rights reserved. |\n        Developed by{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/zezhengjiang/\"\n          style={{ textDecoration: \"none\", color: \"#3c3c3c\" }}\n        >\n          Daniel Jiang\n        </a>\n      </h4>\n    </div>\n  )\n}\n\nexport default Footer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>This page doesn't exist - but really?</h1>\n    <div> </div>\n    <h2>If you wait for a waiter in a restaurant, who is the waiter?</h2>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}